set(publicHeaderDir ${PROJECT_SOURCE_DIR}/include/)

include_directories(${publicHeaderDir})

set(publicHeaders 

    "canvas/Canvas.h"
    "canvas/WindowSize.h"
	
	"nodes/core/IContainNodes.h"
	"nodes/core/constants.h"
	"nodes/core/NodeUniform.h"
	"nodes/core/UniformGroupNode.h"
	"nodes/core/NodeFunction.h"
	"nodes/core/NodeParser.h"
	"nodes/core/NodeFunctionInput.h"
	"nodes/core/NodeBuilder.h"
	"nodes/core/NodeCache.h"
	"nodes/core/NodeUtils.h"
	"nodes/core/Node.h"
	"nodes/core/NodeAttribute.h"
	"nodes/core/TempNode.h"
	"nodes/core/AssignNode.h"
	"nodes/core/StackNode.h"
	"nodes/core/NodeFrame.h"
	"nodes/core/NodeKeywords.h"
	"nodes/core/StructTypeNode.h"
	"nodes/accessors/ModelViewProjectionNode.h"
	"nodes/utils/SplitNode.h"
	"nodes/math/CondNode.h"
	"nodes/materials/NodeMaterial.h"
	"nodes/lighting/LightNode.h"
	"nodes/lighting/LightsNode.h"
	"nodes/lighting/EnvironmentNode.h"
	"nodes/shadernode/ShaderNode.h"
	"nodes/fog/FogNode.h"
	"nodes/display/ToneMappingNode.h"

	"core/BufferAttribute.h"
	"core/BufferGeometry.h"
	"core/Clock.h"
	"core/EventDispatcher.h"
	"core/Face3.h"
	"core/Layers.h"
	"core/misc.h"
	"core/InstancedBufferAttribute.h"
	"core/InstancedBufferGeometry.h"
	"core/InterleavedBuffer.h"
	"core/InterleavedBufferAttribute.h"
	"core/Object3D.h"
	"core/Raycaster.h"
	"core/Shader.h"
	"core/Uniform.h"

	"input/KeyListener.h"
    "input/MouseListener.h"
    "input/PeripheralsEventSource.h"

	"renderers/common/nodes/Nodes.h"
	"renderers/common/nodes/NodeBuilderState.h"
	
	"renderers/common/Info.h"
	"renderers/common/Renderer.h"
	"renderers/common/Attributes.h"
	"renderers/common/Geometries.h"
	"renderers/common/Animation.h"
	"renderers/common/Background.h"
	"renderers/common/Textures.h"
	"renderers/common/Pipeline.h"
	"renderers/common/Pipelines.h"
	"renderers/common/Bindings.h"
	"renderers/common/RenderObject.h"
	"renderers/common/RenderObjects.h"
	"renderers/common/RenderList.h"
	"renderers/common/RenderLists.h"
	"renderers/common/RenderContext.h"
	"renderers/common/RenderContexts.h"
	"renderers/common/ClippingContext.h"
	"renderers/common/BufferUtils.h"
	"renderers/common/Binding.h"
	"renderers/common/Buffer.h"
	"renderers/common/UniformBuffer.h"
	"renderers/common/UniformsGroup.h"
	"renderers/common/Uniform.h"

	"renderers/webgpu/utils/WebGPUUtils.h"
	"renderers/webgpu/utils/WebGPUAttributeUtils.h"
	"renderers/webgpu/utils/WebGPUBindingUtils.h"
	"renderers/webgpu/utils/WebGPUPipelineUtils.h"
	"renderers/webgpu/utils/WebGPUTextureUtils.h"

	"renderers/webgpu/nodes/WGSLNodeFunction.h"
	"renderers/webgpu/nodes/WGSLNodeParser.h"
	"renderers/webgpu/nodes/WGSLNodeBuilder.h"

	"renderers/WebGPUBackend.h"
	"renderers/WebGPURenderer.h"
	"renderers/RenderTarget.h"

	"cameras/Camera.h"
	"cameras/PerspectiveCamera.h"
	"cameras/OrthographicCamera.h"

	"materials/interfaces.h"
	"materials/Material.h"
	"materials/SpriteMaterial.h"
	"materials/LineBasicMaterial.h"
	"materials/PointsMaterial.h"
	"materials/MeshBasicMaterial.h"
	"materials/ShaderMaterial.h"

	"objects/ObjectWithMorphTargetInfluences.h"
	"objects/Group.h"
	"objects/Bone.h"
	"objects/Mesh.h"
	"objects/Skeleton.h"
	"objects/SkinnedMesh.h"
	"objects/LOD.h"
	"objects/Line.h"
	"objects/LineLoop.h"
	"objects/Sprite.h"
	"objects/Points.h"

	"lights/lights.h"
	"lights/Light.h"
	"lights/LightProbe.h"
	"lights/AmbientLight.h"
	"lights/DirectionalLight.h"
	"lights/DirectionalLightShadow.h"
	"lights/HemisphereLight.h"
	"lights/LightShadow.h"
	"lights/PointLight.h"
	"lights/PointLightShadow.h"
	"lights/SpotLight.h"
	"lights/SpotLightShadow.h"

	"textures/DataTexture.h"
	"textures/DataTexture3D.h"
	"textures/DepthTexture.h"
	"textures/FramebufferTexture.h"
	"textures/CompressedTexture.h"
	"textures/VideoTexture.h"
	"textures/Image.h"
	"textures/Texture.h"

	"scenes/Fog.h"
	"scenes/FogExp2.h"
	"scenes/Scene.h"

	"math/Box2.h"
	"math/Box3.h"
	"math/Capsule.h"
	"math/Color.h"
	"math/Color4.h"
	"math/Cylindrical.h"
	"math/Euler.h"
	"math/float_view.h"
	"math/Frustum.h"
	"math/ImprovedNoise.h"
	"math/Line3.h"
	"math/MathUtils.h"
	"math/Matrix3.h"
	"math/Matrix4.h"
	"math/Plane.h"
	"math/Ray.h"
	"math/Sphere.h"
	"math/Spherical.h"
	"math/SphericalHarmonics3.h"
	"math/Triangle.h"
	"math/Vector2.h"
	"math/Vector3.h"
	"math/Vector4.h"
	"math/Quaternion.h"

	"loaders/ImageLoader.h"

	"utils/StringUtils.h"
	"utils/TypeUtils.h"
	"utils/WeakMap.h"
	"utils/ChainMap.h"
)
set(publicHeadersFull)
foreach (header IN LISTS publicHeaders)
    list(APPEND publicHeadersFull "${publicHeaderDir}${header}")
endforeach ()

set(sources 
		"canvas/Canvas.cpp"

		"nodes/core/constants.cpp"
		"nodes/core/NodeUtils.cpp"
		"nodes/core/NodeBuilder.cpp"
		"nodes/core/NodeCache.cpp"
		"nodes/core/UniformGroupNode.cpp"
		"nodes/core/NodeUniform.cpp"
		"nodes/core/Node.cpp"
		"nodes/core/TempNode.cpp"
		"nodes/core/AssignNode.cpp"
		"nodes/core/StackNode.cpp"
		"nodes/core/NodeFrame.cpp"
		"nodes/core/NodeKeywords.cpp"
		"nodes/utils/SplitNode.cpp"
		"nodes/math/CondNode.cpp"
		"nodes/materials/NodeMaterial.cpp"
		"nodes/lighting/LightNode.cpp"
		"nodes/lighting/LightsNode.cpp"
		"nodes/lighting/EnvironmentNode.cpp"
		"nodes/shadernode/ShaderNode.cpp"
		"nodes/fog/FogNode.cpp"
		"nodes/display/ToneMappingNode.cpp"

        "core/BufferGeometry.cpp"
        "core/Clock.cpp"
        "core/EventDispatcher.cpp"
        "core/Layers.cpp"
        "core/Object3D.cpp"
        "core/Raycaster.cpp"
        "core/Uniform.cpp"

		"input/PeripheralsEventSource.cpp"

		"renderers/common/nodes/Nodes.cpp"
		"renderers/common/nodes/NodeBuilderState.cpp"

		"renderers/common/Info.cpp"
		"renderers/common/Renderer.cpp"
		"renderers/common/Attributes.cpp"
		"renderers/common/Geometries.cpp"
		"renderers/common/Animation.cpp"
		"renderers/common/Background.cpp"
		"renderers/common/Textures.cpp"
		"renderers/common/Pipelines.cpp"
		"renderers/common/Bindings.cpp"
		"renderers/common/RenderObject.cpp"
		"renderers/common/RenderObjects.cpp"
		"renderers/common/RenderList.cpp"
		"renderers/common/RenderLists.cpp"
		"renderers/common/RenderContext.cpp"
		"renderers/common/RenderContexts.cpp"
		"renderers/common/ClippingContext.cpp"
		"renderers/common/Buffer.cpp"
		"renderers/common/UniformsGroup.cpp"

		"renderers/webgpu/utils/WebGPUUtils.cpp"
		"renderers/webgpu/utils/WebGPUAttributeUtils.cpp"
		"renderers/webgpu/utils/WebGPUBindingUtils.cpp"
		"renderers/webgpu/utils/WebGPUPipelineUtils.cpp"
		"renderers/webgpu/utils/WebGPUTextureUtils.cpp"

		"renderers/webgpu/nodes/WGSLNodeFunction.cpp"
		"renderers/webgpu/nodes/WGSLNodeBuilder.cpp"

		"renderers/WebGPUBackend.cpp"
		"renderers/WebGPURenderer.cpp"
		"renderers/RenderTarget.cpp"

		"cameras/Camera.cpp"
        "cameras/PerspectiveCamera.cpp"
        "cameras/OrthographicCamera.cpp"

		"materials/Material.cpp"
		"materials/SpriteMaterial.cpp"
		"materials/LineBasicMaterial.cpp"
		"materials/PointsMaterial.cpp"
		"materials/MeshBasicMaterial.cpp"
		"materials/ShaderMaterial.cpp"

		"objects/Group.cpp"
		"objects/Mesh.cpp"
		"objects/Skeleton.cpp"
		"objects/SkinnedMesh.cpp"
		"objects/LOD.cpp"
		"objects/Line.cpp"
		"objects/LineLoop.cpp"
		"objects/Sprite.cpp"
		"objects/Points.cpp"

		"lights/AmbientLight.cpp"
        "lights/DirectionalLight.cpp"
        "lights/HemisphereLight.cpp"
        "lights/Light.cpp"
        "lights/LightShadow.cpp"
        "lights/PointLight.cpp"
        "lights/PointLightShadow.cpp"
        "lights/SpotLight.cpp"
        "lights/SpotLightShadow.cpp"

		"scenes/Scene.cpp"
        "scenes/Fog.cpp"
        "scenes/FogExp2.cpp"

		"textures/Texture.cpp"
        "textures/DataTexture3D.cpp"

	    "math/Box2.cpp"
        "math/Box3.cpp"
        "math/Capsule.cpp"
        "math/Color.cpp"
		"math/Color4.cpp"
        "math/Cylindrical.cpp"
        "math/Euler.cpp"
        "math/Frustum.cpp"
        "math/ImprovedNoise.cpp"
        "math/Line3.cpp"
        "math/MathUtils.cpp"
        "math/Matrix3.cpp"
        "math/Matrix4.cpp"
        "math/Plane.cpp"
        "math/Ray.cpp"
        "math/Sphere.cpp"
        "math/Spherical.cpp"
        "math/SphericalHarmonics3.cpp"
        "math/Triangle.cpp"
        "math/Vector2.cpp"
        "math/Vector3.cpp"
        "math/Vector4.cpp"
        "math/Quaternion.cpp"

		"loaders/ImageLoader.cpp"

		"utils/StringUtils.cpp"
)

add_library(mix ${sources} ${publicHeadersFull})

target_link_libraries(mix PUBLIC webgpu glfw3webgpu)
